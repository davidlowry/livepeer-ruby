=begin
#Livepeer API Reference

#Welcome to the Livepeer API reference docs. Here you will find all the endpoints exposed on the standard Livepeer API, learn how to use them and what they return. 

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1

=end

# Common files
require 'livepeer/api_client'
require 'livepeer/api_error'
require 'livepeer/version'
require 'livepeer/configuration'

# Models
require 'livepeer/models/asset'
require 'livepeer/models/asset_hash_inner'
require 'livepeer/models/asset_source'
require 'livepeer/models/asset_source_one_of'
require 'livepeer/models/asset_source_one_of1'
require 'livepeer/models/asset_source_one_of2'
require 'livepeer/models/asset_status'
require 'livepeer/models/asset_storage'
require 'livepeer/models/asset_storage_ipfs'
require 'livepeer/models/asset_storage_ipfs_spec'
require 'livepeer/models/asset_video_spec'
require 'livepeer/models/asset_video_spec_tracks_inner'
require 'livepeer/models/attestation'
require 'livepeer/models/attestation_domain'
require 'livepeer/models/attestation_message'
require 'livepeer/models/attestation_message_attestations_inner'
require 'livepeer/models/attestation_storage'
require 'livepeer/models/attestation_storage_ipfs'
require 'livepeer/models/create_room_response'
require 'livepeer/models/creator_id'
require 'livepeer/models/creator_id_one_of'
require 'livepeer/models/error'
require 'livepeer/models/export_task_params'
require 'livepeer/models/export_task_params_one_of'
require 'livepeer/models/export_task_params_one_of1'
require 'livepeer/models/export_task_params_one_of_custom'
require 'livepeer/models/ffmpeg_profile'
require 'livepeer/models/get_public_total_views_metrics200_response'
require 'livepeer/models/get_room_user_response'
require 'livepeer/models/get_viewerships_metrics_from_parameter'
require 'livepeer/models/input_creator_id'
require 'livepeer/models/ipfs_export_params'
require 'livepeer/models/ipfs_export_params_pinata'
require 'livepeer/models/ipfs_export_params_pinata_one_of'
require 'livepeer/models/ipfs_export_params_pinata_one_of1'
require 'livepeer/models/ipfs_file_info'
require 'livepeer/models/multistream_target'
require 'livepeer/models/new_asset_payload'
require 'livepeer/models/new_asset_payload_encryption'
require 'livepeer/models/new_asset_payload_storage'
require 'livepeer/models/new_asset_payload_storage_ipfs'
require 'livepeer/models/new_asset_payload_storage_ipfs_one_of'
require 'livepeer/models/new_asset_payload_storage_ipfs_one_of_spec'
require 'livepeer/models/new_stream_payload'
require 'livepeer/models/playback_info'
require 'livepeer/models/playback_info_meta'
require 'livepeer/models/playback_info_meta_source_inner'
require 'livepeer/models/playback_policy'
require 'livepeer/models/request_upload200_response'
require 'livepeer/models/request_upload200_response_task'
require 'livepeer/models/room'
require 'livepeer/models/room_egress_payload'
require 'livepeer/models/room_participants_value'
require 'livepeer/models/room_user_payload'
require 'livepeer/models/room_user_response'
require 'livepeer/models/room_user_update_payload'
require 'livepeer/models/session'
require 'livepeer/models/signing_key'
require 'livepeer/models/signing_key_response_payload'
require 'livepeer/models/storage_status'
require 'livepeer/models/storage_status_tasks'
require 'livepeer/models/stream'
require 'livepeer/models/stream_health_payload'
require 'livepeer/models/stream_health_payload_tracks_value'
require 'livepeer/models/stream_multistream'
require 'livepeer/models/stream_multistream_targets_inner'
require 'livepeer/models/stream_multistream_targets_inner_spec'
require 'livepeer/models/stream_patch_payload'
require 'livepeer/models/task'
require 'livepeer/models/task_output'
require 'livepeer/models/task_output_export'
require 'livepeer/models/task_output_export_data'
require 'livepeer/models/task_output_export_data_ipfs'
require 'livepeer/models/task_output_export_ipfs'
require 'livepeer/models/task_output_transcode'
require 'livepeer/models/task_output_transcode_asset'
require 'livepeer/models/task_output_upload'
require 'livepeer/models/task_params'
require 'livepeer/models/task_params_export_data'
require 'livepeer/models/task_params_transcode'
require 'livepeer/models/task_params_transcode_file'
require 'livepeer/models/task_params_transcode_file_input'
require 'livepeer/models/task_params_transcode_file_outputs'
require 'livepeer/models/task_params_transcode_file_outputs_hls'
require 'livepeer/models/task_params_transcode_file_outputs_mp4'
require 'livepeer/models/task_params_transcode_file_storage'
require 'livepeer/models/task_params_upload'
require 'livepeer/models/task_status'
require 'livepeer/models/update_signing_key_request'
require 'livepeer/models/upload_asset_via_url200_response'
require 'livepeer/models/usage_metric'
require 'livepeer/models/viewership_metric'
require 'livepeer/models/webhook'
require 'livepeer/models/webhook_status'
require 'livepeer/models/webhook_status_last_failure'

# APIs
require 'livepeer/api/default_api'

module Livepeer
  class Client
    def initialize(api_key:)
      configure_api(api_key)
      @api_instance = DefaultApi.new
    end
    
    # This method will delegate all undefined methods to the @api_instance object
    def method_missing(method_name, *arguments, &block)
      if @api_instance.respond_to?(method_name)
        @api_instance.send(method_name, *arguments, &block)
      else
        super
      end
    end

    def respond_to_missing?(method_name, include_private = false)
      @api_instance.respond_to?(method_name) || super
    end

    private
    
    def configure_api(api_key)
      Livepeer::Client.configure do |config|
        config.api_key['api_key'] = api_key
        # config.api_key_prefix['apiKey'] = 'Bearer' # Uncomment if needed
      end
    end
  end
end
