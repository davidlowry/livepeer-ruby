=begin
#Livepeer API Reference

#Welcome to the Livepeer API reference docs. Here you will find all the endpoints exposed on the standard Livepeer API, learn how to use them and what they return. 

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for livepeer::DefaultApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @api_instance = livepeer::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@api_instance).to be_instance_of(livepeer::DefaultApi)
    end
  end

  # unit tests for create_multistream_target
  # Create a multistream target
  # @param multistream_target 
  # @param [Hash] opts the optional parameters
  # @return [Array<MultistreamTarget>]
  describe 'create_multistream_target test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_room
  # Create a room
  # @param [Hash] opts the optional parameters
  # @return [CreateRoomResponse]
  describe 'create_room test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_room_user
  # Create a room user
  # @param id ID of the room
  # @param room_user_payload 
  # @param [Hash] opts the optional parameters
  # @return [RoomUserResponse]
  describe 'create_room_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_signing_key
  # Create a signing key
  # @param [Hash] opts the optional parameters
  # @return [SigningKeyResponsePayload]
  describe 'create_signing_key test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_stream
  # Create a stream
  # @param new_stream_payload 
  # @param [Hash] opts the optional parameters
  # @return [Array<Stream>]
  describe 'create_stream test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_webhook
  # Create a webhook
  # @param [Hash] opts the optional parameters
  # @return [Webhook]
  describe 'create_webhook test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_asset
  # Delete an asset
  # @param asset_id ID of the asset
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_asset test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_multistream_target
  # Delete a multistream target
  # @param id ID of the multistream target
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_multistream_target test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_room
  # Delete a room
  # @param id ID of the room
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_room test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_room_user
  # Remove a user from the room
  # @param id ID of the room
  # @param user_id ID of the user
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_room_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_signing_key
  # Delete Signing Key
  # @param key_id ID of the signing key
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_signing_key test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_stream
  # Delete a stream
  # @param id ID of the stream
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_stream test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_webhook
  # Delete a webhook
  # @param id ID of the webhook
  # @param [Hash] opts the optional parameters
  # @return [Webhook]
  describe 'delete_webhook test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_asset
  # Retrieves an asset
  # @param asset_id ID of the asset
  # @param [Hash] opts the optional parameters
  # @return [Asset]
  describe 'get_asset test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_assets
  # Retrieve assets
  # @param [Hash] opts the optional parameters
  # @return [Array<Asset>]
  describe 'get_assets test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_creator_metrics
  # Query creator viewership metrics
  # @param [Hash] opts the optional parameters
  # @option opts [GetViewershipsMetricsFromParameter] :from Start timestamp for the query range (inclusive)
  # @option opts [GetViewershipsMetricsFromParameter] :to End timestamp for the query range (exclusive)
  # @option opts [String] :time_step The time step to aggregate viewership metrics by
  # @option opts [String] :asset_id The asset ID to filter metrics for
  # @option opts [String] :stream_id The stream ID to filter metrics for
  # @option opts [String] :creator_id The creator ID to filter the query results
  # @option opts [Array<String>] :breakdown_by The list of fields to break down the query results. Specify this query-string multiple times to break down by multiple fields. 
  # @return [Array<ViewershipMetric>]
  describe 'get_creator_metrics test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_multistream_target
  # Retrieve a multistream target
  # @param id ID of the multistream target
  # @param [Hash] opts the optional parameters
  # @return [MultistreamTarget]
  describe 'get_multistream_target test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_multistream_targets
  # Retrieve Multistream Targets
  # @param [Hash] opts the optional parameters
  # @return [Array<MultistreamTarget>]
  describe 'get_multistream_targets test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_playback_info
  # Retrieve Playback Info
  # @param id The ID of the playback
  # @param [Hash] opts the optional parameters
  # @return [PlaybackInfo]
  describe 'get_playback_info test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_public_total_views_metrics
  # Query public total views metrics
  # @param playback_id The playback ID to filter the query results. This can be a canonical playback ID from Livepeer assets or streams, or dStorage identifiers for assets 
  # @param [Hash] opts the optional parameters
  # @return [GetPublicTotalViewsMetrics200Response]
  describe 'get_public_total_views_metrics test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_recorded_sessions
  # Retrieve Recorded Sessions
  # @param parent_id ID of the parent stream
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :record Flag indicating if the response should only include recorded sessions 
  # @return [Array<Session>]
  describe 'get_recorded_sessions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_room
  # Retrieve a room
  # @param id ID of the room
  # @param [Hash] opts the optional parameters
  # @return [Room]
  describe 'get_room test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_room_user_details
  # Get user details
  # @param id ID of the room
  # @param user_id ID of the user
  # @param [Hash] opts the optional parameters
  # @return [GetRoomUserResponse]
  describe 'get_room_user_details test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_session
  # Retrieve a session
  # @param id ID of the session
  # @param [Hash] opts the optional parameters
  # @return [Session]
  describe 'get_session test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_sessions
  # Retrieve sessions
  # @param [Hash] opts the optional parameters
  # @return [Array<Session>]
  describe 'get_sessions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_signing_key
  # Retrieves a signing key
  # @param key_id ID of the signing key
  # @param [Hash] opts the optional parameters
  # @return [SigningKey]
  describe 'get_signing_key test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_signing_keys
  # Retrieves signing keys
  # @param [Hash] opts the optional parameters
  # @return [Array<SigningKey>]
  describe 'get_signing_keys test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_stream
  # Retrieve a stream
  # @param id ID of the stream
  # @param [Hash] opts the optional parameters
  # @return [Stream]
  describe 'get_stream test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_streams
  # Retrieve streams
  # @param [Hash] opts the optional parameters
  # @option opts [String] :streamsonly Filter the API response and retrieve a specific subset of stream objects based on certain criteria
  # @return [Array<Stream>]
  describe 'get_streams test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_task
  # Retrieve a Task
  # @param task_id ID of the task
  # @param [Hash] opts the optional parameters
  # @return [Task]
  describe 'get_task test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_tasks
  # Retrieve Tasks
  # @param [Hash] opts the optional parameters
  # @return [Array<Task>]
  describe 'get_tasks test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_usage_metrics
  # Query usage metrics
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :from Start millis timestamp for the query range (inclusive) 
  # @option opts [Integer] :to End millis timestamp for the query range (exclusive) 
  # @option opts [String] :time_step The time step to aggregate viewership metrics by 
  # @option opts [String] :creator_id The creator ID to filter the query results 
  # @return [UsageMetric]
  describe 'get_usage_metrics test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_viewerships_metrics
  # Query viewership metrics
  # @param [Hash] opts the optional parameters
  # @option opts [String] :playback_id The playback ID to filter the query results. This can be a canonical playback ID from Livepeer assets or streams, or dStorage identifiers for assets 
  # @option opts [GetViewershipsMetricsFromParameter] :from Start timestamp for the query range (inclusive)
  # @option opts [GetViewershipsMetricsFromParameter] :to End timestamp for the query range (exclusive)
  # @option opts [String] :time_step The time step to aggregate viewership metrics by
  # @option opts [String] :asset_id The asset ID to filter metrics for
  # @option opts [String] :stream_id The stream ID to filter metrics for
  # @option opts [String] :creator_id The creator ID to filter the query results
  # @option opts [Array<String>] :breakdown_by The list of fields to break down the query results. Specify this query-string multiple times to break down by multiple fields. 
  # @return [Array<ViewershipMetric>]
  describe 'get_viewerships_metrics test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_webhook
  # Retrieve a webhook
  # @param id ID of the webhook
  # @param [Hash] opts the optional parameters
  # @return [Webhook]
  describe 'get_webhook test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_webhooks
  # Retrieve a Webhook
  # @param [Hash] opts the optional parameters
  # @return [Array<Webhook>]
  describe 'get_webhooks test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for request_upload
  # Upload an asset
  # @param new_asset_payload 
  # @param [Hash] opts the optional parameters
  # @return [RequestUpload200Response]
  describe 'request_upload test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for start_room_egress
  # Start room RTMP egress
  # @param id ID of the room
  # @param room_egress_payload 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'start_room_egress test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for stop_room_egress
  # Stop room RTMP egress
  # @param id ID of the room
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'stop_room_egress test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for transcode
  # Transcode a video
  # @param task 
  # @param [Hash] opts the optional parameters
  # @return [Task]
  describe 'transcode test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_multistream_target
  # Update Multistream Target
  # @param id ID of the multistream target
  # @param body 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_multistream_target test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_room_user_details
  # Update a room user
  # @param id ID of the room
  # @param user_id ID of the user
  # @param room_user_update_payload 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_room_user_details test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_signing_key
  # Update a signing key
  # @param key_id ID of the signing key
  # @param update_signing_key_request 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_signing_key test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_stream
  # Update a stream
  # @param id ID of the stream
  # @param stream_patch_payload 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_stream test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_webhook
  # Update a webhook
  # @param id ID of the webhook
  # @param [Hash] opts the optional parameters
  # @return [Webhook]
  describe 'update_webhook test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for upload_asset_via_url
  # Upload asset via URL
  # @param new_asset_payload 
  # @param [Hash] opts the optional parameters
  # @return [UploadAssetViaURL200Response]
  describe 'upload_asset_via_url test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
